#!/bin/bash

DEV1="eno1"
DEV1_PCI="0000:51:00.0"
DEV2="eno2"
DEV2_PCI="0000:51:00.1"

VFS=4
VFS_MAC="80:37:57:17:44:01 80:37:57:17:44:02 80:37:57:17:44:03 80:37:57:17:44:04"

function status {
  echo
  echo
  echo "$1"
  echo "==============================================================="
  ip link show
  echo
  echo
}

function cleantc {
  tc filter del dev $1 ingress
  tc filter del dev $1 root
  tc qdisc  del dev $1 ingress
  tc qdisc  del dev $1 root
}

function dumptc {
  tc qdisc  show dev $1
  tc class  show dev $1
  tc filter show dev $1
}

function tcmirror {
  # ingress
  tc qdisc  add     dev $1 handle ffff: ingress
  tc filter add     dev $1 handle parent ffff:fff1 protocol all matchall action mirred egress mirror dev $2
  # egress
  tc qdisc  add     dev $1 handle fff1: root prio
  tc filter add     dev $1 parent fff1: protocol all matchall action mirred egress mirror dev $2
}

function disable_sriov {
  DEV=$1
  PCI=$2

  echo 0 > /sys/class/net/$DEV/device/sriov_numvfs
  devlink dev eswitch set pci/$PCI mode legacy
}

function enable_sriov {
  DEV=$1
  PCI=$2
  MAX=$3
   
  devlink dev eswitch set pci/$PCI mode switchdev
  echo $MAX > /sys/class/net/$DEV/device/sriov_numvfs

  declare -i i
  i=0
  for mac in $MAC
  do
    ip link set $DEV vf $i mac $mac
    i=i+1
  done
}

function bringup {
  ip link set $DEV up
  for link in $LINKS1
  do
    ip link set $link up
  done
  for link in $LINKS2
  do
    ip link set $link up
  done
}

function configipv4 {
  i=13
  for link in $LINKS1
  do
    ip addr add ${IPV4}$i/255.255.255.0 brd + dev $link
    i=$i+1
  done

  i=5
  for link in $LINKS2
  do
    ip addr add ${IPV4}$i/255.255.255.0 brd + dev $link
    i=$i+1
  done

  status "POST-IP-CONFIG"
}

function enableTcOffload {
  ethtool -K $DEV hw-tc-offload $1
  for link in $LINKS1
  do
    ethtool -K $link hw-tc-offload $1
  done

  for link in $LINKS2
  do
    ethtool -K $link hw-tc-offload $1
  done
}

status "SCRIPT START"

disable_sriov $DEV1 $DEV1_PCI
disable_sriov $DEV2 $DEV2_PCI

status "POST SR-IOV-DISABLE"

enable_sriov $DEV1 $DEV1_PCI $VFS "${VFS_MAC}"

status "POST SR-IOV-ENABLE"
